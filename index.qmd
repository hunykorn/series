---
title: "Cours Numpy/Pandas"
subtitle: "Le bon cours sa mère" 
date: "Mai 2024"
author: "Lucas Sanhes"
citation_url: https://openscapes.github.io/series
slug: index
---

## Numpy ? Qué cé cé ? {#welcome}

La bibliothèque NumPy (http://www.numpy.org/) permet d’effectuer des calculs numériques avec Python. Elle introduit une gestion facilitée des tableaux de nombres.

Pour utiliser NumPy, vous devez au préalable vous placer dans un environnement qui comprend cette bibliothèque, voir Introduction à Python.

Il faut au départ importer le package numpy avec l’instruction suivante :
```{python}
import numpy as np
```


## Purpose, Outcomes, Process (POP)

Les tableaux (en anglais, array) peuvent être créés avec numpy.array(). On utilise des crochets pour délimiter les listes déléments dans les tableaux.

```{python}
a = np.array([1, 2, 3, 4])
print(a)
type(a)
```

```{python}
print(a[0], a[-1])
```

```{python}
print(a)
a.shape
```

# Tableau 2D

Il est possible de créer un tableau 2D en utilisant une liste de listes au moyen de crochets imbriqués. Les listes internes correspondent à des lignes du tableau.

```{python}
b = np.array([[1, 2, 3], [4, 5, 6]])
print(b)
b.shape
```

```{python}
b[0, 2]
b[1,2]
```

```{python}
# Ligne entière 
b[0,:]

# Dernière ligne en partant de la fin 
b[-1,:]

# Derniere Colonne entière
b[:,-1]

# Deux dernieres colonnes
b[:, [0, 2]]
```

```{python}
b[:,[0,2]]
```

```{python}
# a random array
c = np.random.randint(low=0, high=10, size=[10,5])
print(c)
c.shape
```

La fonction numpy.arange est utilisée pour créer des tableaux avec des valeurs dans un intervalle spécifié.

```{python}
m = np.arange(2, 100, 2)
print(m)
```

La fonction numpy.linspace() est utilisée pour créer un tableau de valeurs uniformément espacées sur un intervalle spécifié.

```{python}
n = np.linspace(3, 9, 10)
print(n)
```

# Fonctions Mathématiques

## Fonctions Arithmétiques : np.add(), np.subtract(), np.multiply(), np.divide(), np.power()

```{python}
a = np.array([1, 2, 3])
b = np.array([4, 5, 6])
result = np.add(a, b)
print(result) 
```

```{python}
a = np.array([1, 2, 3])
result = np.power(a, 2)
print(result) 
```

## Fonctions Trigonométriques : np.sin(), np.cos(), np.tan()
```{python}
angles = np.array([0, np.pi/2, np.pi])
sin_values = np.sin(angles)
print(sin_values)
```

## Fonctions d'exponentielle et logarithme :np.exp(), np.log(), np.log10()

```{python}
x = np.array([1, 2, 3])
exp_x = np.exp(x)
print(exp_x) 
```

## Fonctions Statistiques : np.mean(), np.median(), np.std()

```{python}
data = np.array([1, 2, 3, 4, 5])
mean_data = np.mean(data)
print(mean_data) 
```

## Fonctions d'Arrondi : np.round(), np.floor(), np.ceil()

```{python}
values = np.array([1.55, 1.49, -1.27, -1.76])
rounded = np.round(values)
print(rounded)
```

# Pandas

## 5.3 Matplotlib 

## 5.4 Seaborn

| Cohort Call Topics                                    | Series Chapters                                                                                               | Seaside Chat Topics                    |
|--------------------|------------------------|----------------------------|
| 1\. Mindset, Better Science for Future Us             | [mindset](core-lessons/mindset.qmd), [better science in less time](core-lessons/better-science.qmd)           | Pathways trailhead - where are you now |
| 2\. GitHub Clinic: Publishing, Project Management     | [publishing](core-lessons/github/github-pub.qmd), [project management](core-lessons/github/github-issues.qmd) | Shared organizing and onboarding       |
| 3\. Team Culture, Data Strategies for Future Us       | [team culture](core-lessons/team-culture.qmd), [data strategies](core-lessons/data-strategies.qmd)            | Pathways next steps and documentation  |
| 4\. Open Communities, Coding Strategies for Future Us | [open communities](core-lessons/communities.qmd), [coding strategies](core-lessons/coding-strategies.qmd)     | Pathways share preparation             |
| 5\. Pathways Share, Next Steps                        |                                                                                                               |                                        |

```{=html}
<!---
acknowledgements - Thank you
--->
```

------------------------------------------------------------------------

<a rel='license' href='http://creativecommons.org/licenses/by/4.0/'><img src="https://i.creativecommons.org/l/by/4.0/88x31.png" alt="Creative Commons License" style="border-width:0"/></a>  Openscapes is licensed under a <a rel='license' href='http://creativecommons.org/licenses/by/4.0/'>Creative Commons Attribution 4.0 International License</a>.

```{=html}
<!---
resize:
![](img/openscapes_hex_design_final_correct_dimensions.png)
Before you begin, be sure you are all set up: see the prerequisites in Chapter \@ref(overview). 





Mentee topic
Cohort Call topic
Assignment
Table 1
1. Openscapes mindset
read Lowndes et al 2017
2. Better science in less time
Seaside chat, Table 1
Lab culture
3. Lab culture
Code of conduct
4. Github for your lab
Code of conduct on Github
Coding practices
5. R community practices, packages efficiency tour


6. Mid-series check in


Community
7. Study Groups
Start a study group


8. 




9. Amplify




10. Share
--->
```
